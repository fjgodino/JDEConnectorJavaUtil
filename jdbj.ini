#=======================================================================
# USAR COMO REFERENCIA EL DEL FAT
#=======================================================================
E:\CARPETAS\TRABAJO\MODUSBOX\ModusBox\console_modusbox\jdbj.ini
#=======================================================================
#                    jdbj.ini - JDBj configuration
#
# This file contains configuration information for JDBj, which provides 
# general database access capabilities on behalf of J.D. Edwards Java 
# solutions.
#=======================================================================

#=======================================================================
#                    OneWorld specific information 
#
# These sections apply only when accessing OneWorld data.  These 
# sections are ignored for standalone database access.
#=======================================================================

#-----------------------------------------------------------------------
# Bootstrap session
#
# This information is used to sign on to provide access to system 
# tables.  JDBj signs this user on via the security server at bootstrap-
# time, so if it is not valid, then no OneWorld database access is 
# possible.
#
# NOTES: * This information in this section should match the 
#          corresponding information specified in the 
#          [DB SYSTEM SETTINGS] section of this installation's JDE.INI 
#          file.
#-----------------------------------------------------------------------

[JDBj-BOOTSTRAP SESSION]
environment=JPS920
password=
role=*ALL
user=

#-----------------------------------------------------------------------
# Bootstrap physical data source
#
# This defines the data source where the OCM and some other system 
# tables reside.  JDBj uses this at bootstrap time and later to look up 
# OCM entries on demand.  If it is not valid, then no OneWorld database 
# access is possible.
#
# Here is a description of each field in this section:
#
# ----------------  ---------------------------------------  -----------
# Field             Description                              Applies to
# ----------------  ---------------------------------------  -----------
# name              The data source name.  This is not that  All
#                   important for bootstrap connections, 
#                   but it does show up in error messages
#                   and the log.
# ----------------  ---------------------------------------  -----------
# databaseType      The database type.  One of the           All
#                   following:
#
#                   I = AS/400
#                   O = Oracle
#                   S = SQL Server
#                   W = UDB
# ----------------  ---------------------------------------  -----------
# server            The server (i.e. the host).              AS/400,
#                                                            SQL Server
# ----------------  ---------------------------------------  -----------
# database          The database.                            Oracle, UDB
# ----------------  ---------------------------------------  -----------
# serverPort        The server port.                         SQL Server
# ----------------  ---------------------------------------  -----------
# physicalDatabase  The physical database (used as library   AS/400,
#                   qualifier for AS/400).                   SQL Server
# ----------------  ---------------------------------------  -----------
# owner             The owner.                               Oracle, 
#                                                            SQL Server,
#                                                            UDB
# ----------------  ---------------------------------------  -----------
# lob               Supports lobs.                           Oracle, 
#                                                            
#                                                            AS/400
# ----------------  ---------------------------------------  -----------
# unicode           Performs unicode conversion.             SQL Server
# ----------------  ---------------------------------------  -----------
#
# NOTES: * This information in this section should match the 
#          corresponding information specified in the 
#          [DB SYSTEM SETTINGS] section of this installation's JDE.INI 
#          file.
#-----------------------------------------------------------------------

[JDBj-BOOTSTRAP DATA SOURCE]
database=JDE-ALPHA-SQL
databaseType=S
lob=true
name=System - 920
owner=
physicalDatabase=JDE920
server=JDE-ALPHA-SQL
serverPort=1433
unicode=true

#-----------------------------------------------------------------------
# Bootstrap spec data source (Optional)
#
# This defines the data source where the serialized spec tables reside.  
# JDBj uses this at bootstrap time and after to look up serialized spec 
# objects on demand.  If this section is not specified, then JDBj will 
# use the OCM to find the serialized spec table.  If it is not valid, no 
# OneWorld database access is possible.
#
# See the description for "Bootstrap physical data source" above for 
# information about which fields must be filled in for a given database 
# platform.
#-----------------------------------------------------------------------

#[JDBj-SPEC DATA SOURCE]
#name=Central Objects - DV910
#databaseType=S
#server=BNETSRV09
#serverPort=1433
#database=BNETSRV09
#physicalDatabase=JDE910
#owner=DV910
#lob=true
#unicode=true
#databaseInstance=ERROR
#user=sa
#password=

#=======================================================================
#                END - OneWorld specific information 
#
# The rest of the sections apply when accessing OneWorld and standalone 
# data.
#=======================================================================

#-----------------------------------------------------------------------
# JDBC drivers
#
# This defines JDBC drivers and JDBC specific settings.
#-----------------------------------------------------------------------

[JDBj-JDBC DRIVERS]
#ORACLE=driver.OracleDriverCloud
#ORACLE=oracle.jdbc.driver.OracleDriver
#AS400=com.ibm.as400.access.AS400JDBCDriver
SQLSERVER=driver.SQLDriverCloud
#UDB=COM.ibm.db2.jdbc.app.DB2Driver

[JDBj-JDBC BASE DRIVERS]
#BASE.ORACLE=oracle.jdbc.driver.OracleDriver
#BASE.AS400=com.ibm.as400.access.AS400JDBCDriver
BASE.SQLSERVER=com.microsoft.sqlserver.jdbc.SQLServerDriver
#BASE.UDB=COM.ibm.db2.jdbc.app.DB2Driver


[JDBj-ORACLE]
tns=tnsnames.ora

[JDBj-LOGS]
jdbcTrace=true

[JDBj-SERVER]
dbcsConversionTolerant=true

#-----------------------------------------------------------------------
# Connection pool settings
#
# These are used only when J2EE connection pooling is not available.
#-----------------------------------------------------------------------

[JDBj-CONNECTION POOL]
jdbcPooling=false
minConnection=1
maxConnection=25
initialConnection=1
poolGrowth=1
#connectionTimeout=6000000
connectionTimeout=600000
#cleanPoolInterval=1200000
cleanPoolInterval=600000
maxSize=50
purgeCacheSize=5

#-----------------------------------------------------------------------
# JDBj Runtime properties
#
# These are all optional.  They correspond to system runtime properties 
# applicable to JDBj logical connections.    
#
# NOTES: * In each case, the values listed are the defaults. The 
#          template default entries are commented out.  Make sure
#          and remove the pound sign (#) when changing these values.
#-----------------------------------------------------------------------

[JDBj-RUNTIME PROPERTIES]

	; Data cache entry size threshold property. Sets the maximum 
	; size (in rows) for a single entry in the data cache. If a 
	; potential entry exceeds this threshold, then it will not be 
	; cached. -1 indicates that all eligible entries should be 
	; cached. 
	;
	; Valid values: -1 or greater 

#dataCacheEntrySizeThreshold=-1

	; Data cache entry threshold property. Sets the maximum size (in
	; entries) for the data cache. If the data cache exceeds this 
	; size, then the least recently used entries are removed to 
	; make room for the new entry. -1 indicates that there is no 
	; maximum. 
	;
	; Valid values: -1 or greater 

# dataCacheEntryThreshold=100

	; E1Menu cache purge property. Sets the number of
	; milliseconds after which inactive spec cache entries are
	; purged.  0 means to never purge spec cache entries.
	;
	; Valid values: 0 or greater
    
# E1MenuCachePurge=600000

	; Force single data source property. Indicates whether JDBj 
	; should force operations involving multiple database objects to
	; run against a single data source. If this is true, JDBj will 
	; only resolve the physical data source for the first database 
	; object involved in a given operation. Otherwise, JDBj will 
	; resolve physical data sources for all database objects and 
	; throw an exception if a single operation spans multiple data 
	; sources. 
	;
	; Valid values: true, false 

# forceSingleDataSource=false

	; No where paren property.  Certain TableIO system function 
	; queries require a long list of selections in the where clause 
	; without any intermediate parentheses. Specifying a composite 
	; selections alone for this case creates intermediate 
	; parentheses. If this property is set to a true then the JDBj 
	; will create SQL without any intermediate parenetheses. 
	;
	; Valid values: true, false 

# noWhereParen=false

	; Result set timeout property. Sets the the number of 
	; milliseconds for the result set timeout. A result set will 
	; timeout if it has not had any operations for a period of time. 
	;
	; Valid values: -1 or greater 

#resultSetTimeout=6000000

	; Retry interval property. Sets the interval (in milliseconds) 
	; to wait before retrying idempotent database operations. -1 
	; means not to retry, 0 means retry immediately. 
	;
	; Valid values: -1 or greater 

# retryInterval=0

	; Retry maximum property. Sets the number of times to retry 
	; idempotent database operations. -1 means to retry 
	; indefinitely. 
	;
	; Valid values: -1 or greater 

# retryMaximum=5

	; Spec consistency check property. Sets the level of spec 
	; consistency checking. Set this property to a higher level to 
	; improve exception messages relating to spec inconsistency 
	; problems. Set this to a lower level when it is not needed 
	; since it may degrade performance. 
	;
	; Valid values: full, minimal, none 

# specConsistencyCheck=minimal

	; Spec generate on demand property. Indicates whether JDBj 
	; should generate specs on demand if it can not find them
	; in the persistent cache.  
	;
	; Valid values: true, false 

#specGenerateOnDemand=true

	; Transaction isolation property. Sets the isolation level to be 
	; used for transactions. 
	;
	; Valid values: default, none, read uncommitted, read committed, 
	;               repeatable read, serializable 

# transactionIsolation=default

	; Transaction timeout property. Sets the number of milliseconds 
	; for the transaction timeout. A transaction will timeout if it 
	; has not had any operations for a period of time. If this 
	; timeout is set to a -1 then the transaction timeout feature 
	; will be disabled.  (This currently only happens when JDBj is 
	; run as part of a JAS transaction.) 
	;
	; Valid values: -1 or greater 

transactionTimeout=6000000

	; Trigger auto fetch property. Indicates whether JDBj should 
	; automatically fetch rows to be changed in order to pass them 
	; to OneWorld triggers. This is needed for certain triggers to 
	; work properly. 
	;
	; Valid values: true, false 

# triggerAutoFetch=false

	; Updatable result set timeout property. Sets the the number of 
	; milliseconds for the updatable result set timeout. An 
	; updatable result set will timeout if it has not had any 
	; operations for a period of time. -1 indicates that updatable 
	; result sets should have the same value as RESULT_SET_TIMEOUT. 
	;
	; Valid values: -1 or greater 

# updatableResultSetTimeout=-1

	; Usage execution threshold property. Sets the expected maximum 
	; time (in milliseconds) for a single database operation to 
	; execute. If a single database operation takes longer than this 
	; threshold, then the statement and time will be logged as part 
	; of usage tracking. 
	;
	; Valid values: 0 or greater 

# usageExecutionThreshold=6000000

	; Usage fetch size threshold property. Sets the expected maximum 
	; fetch size (in rows) for a single fetch to return. If a single 
	; fetch returns more than than this threshold, then the actual 
	; fetch size will be logged as part of usage tracking. -1 
	; indicates that any fetch size is valid. 
	;
	; Valid values: -1 or greater 

# usageFetchSizeThreshold=-1

	; Usage result set open threshold property. Sets the expected 
	; maximum time (in milliseconds) for a result set to remain 
	; open. If a result set is left open longer than this threshold, 
	; then the result set and time will be logged as part of usage 
	; tracking. This does not automatically close the result set. A 
	; usage result set open threshold value of -1 indicates that no 
	; such usage tracking will occur. 
	;
	; Valid values: -1 or greater 

# usageResultSetOpenThreshold=6000000

	; Usage tracking property. Enables or disables usage tracking. 
	; This provides additional tracking and logging to use during 
	; testing. Usage tracking does incur a performance penalty so it 
	; should be disabled for production code. 
	;
	; Valid values: true, false 

# usageTracking=true

	; Usage tracking output property. Specifies the destination of 
	; usage tracking output. 
	;
	; Valid values: log, exception 

# usageTrackingOutput=log

	; Usage transaction active threshold property. Sets the expected 
	; maximum time (in milliseconds) for a transaction to remain 
	; active. If a transaction is left active longer than this 
	; threshold, then the transaction and time will be logged as 
	; part of usage tracking. This does not automatically rollback 
	; the transaction. A usage transaction active threshold value of 
	; -1 indicates that no such usage tracking will occur. 
	;
	; Valid values: -1 or greater 

# usageTransactionActiveThreshold=1800000

        ; Maximum number of parallel application generators.
        ; Controls how many serialized JAVA application
        ; objects can be generated at one time.
	; For a low-power server, use a lower value.
	; For a high-power server, use a higher value.
        ;
        ; valid values: 1 or greater

# ParallelAppGens=10

#=======================================================================
#                              END OF FILE
#=======================================================================
 